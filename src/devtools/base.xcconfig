ALWAYS_SEARCH_USER_PATHS = YES
HEADER_SEARCH_PATHS = $(HEADER_SEARCH_PATHS) $(SDKROOT)/usr/include/malloc

ARCHS = i386
ONLY_ACTIVE_ARCH = NO
COPY_PHASE_STRIP = NO
DEBUG_INFORMATION_FORMAT = dwarf-with-dsym

DEAD_CODE_STRIPPING = YES
PRESERVE_DEAD_CODE_INITS_AND_TERMS = YES

GCC_C_LANGUAGE_STANDARD = gnu99
GCC_ENABLE_OBJC_EXCEPTIONS = YES
GCC_SYMBOLS_PRIVATE_EXTERN = YES
GCC_INLINES_ARE_PRIVATE_EXTERN = YES
GCC_REUSE_STRINGS = YES

// CPP11_NO_LIBCXX is used to gate some C++11 features that require that we
// switch to libc++. We haven't switched to libc++11 because we have been unable
// to find a clean way to build libcef_dll_wrapper with libc++. 
// We currently build libcef for Steam which needs to run on 10.5, and Xcode
// does not support linking with libc++ and targeting 10.5.
// Once libcef_dll_wrapper has been built with libc++, and you rebuild protobuf
// with libc++ (which is trivial), you can remove CPP11_NO_LIBCXX and add the
// following line to the xcconfig:
// CLANG_CXX_LIBRARY = libc++
GCC_PREPROCESSOR_DEFINITIONS = _DLL_EXT=.dylib NO_MALLOC_OVERRIDE=1 VPROF_LEVEL=1 NO_HOOK_MALLOC=1 PNG_NO_PEDANTIC_WARNINGS CPP11_NO_LIBCXX
BASE_CFLAGS= -Usprintf -Ustrncpy -UPROTECTED_THINGS_ENABLE

GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO = NO
WARNING_CFLAGS = -Wno-deprecated-writable-strings -Wno-switch-enum -Wno-switch -Wno-unused-value -Wno-parentheses -Wno-logical-op-parentheses -Wno-c++11-narrowing

// CLANG - and use the ccache wrapper
GCC_VERSION = com.apple.compilers.llvm.clang.1_0
CC = $(SOURCE_ROOT)/devtools/bin/osx32/xcode_ccache_wrapper
LDPLUSPLUS = $(DT_TOOLCHAIN_DIR)/usr/bin/clang++
CLANG_WARN_CXX0X_EXTENSIONS = NO
CLANG_CXX_LANGUAGE_STANDARD = gnu++11

// include <memory.h> gets confused, 'cause ivp has one, and the system has one, and only one
// gets into the header map, so sacrifice speed for corectness.
USE_HEADERMAP = NO

SDKROOT = macosx
MACOSX_DEPLOYMENT_TARGET = 10.5
GCC_FAST_MATH = YES
